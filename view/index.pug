doctype html
html(lang="br")
    head
        meta(charset="UTF-8")
        meta(name="viewport", content="width=device-width, initial-scale=1.0")
        title Cartão de ponto
        link(rel="stylesheet", href="https://fonts.googleapis.com/css?family=Roboto&display=swap")
        link(rel="stylesheet", href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/5.15.3/css/all.min.css")
        style.
            body {
                font-family: 'Roboto', sans-serif;
                background-color: #fafafa;
                margin: 0;
                padding: 0;
            }
            .container {
                max-width: 800px;
                margin: 20px auto;
                background-color: #fff;
                padding: 20px;
                border-radius: 5px;
                box-shadow: 0 0 10px rgba(0, 0, 0, 0.1);
            }
            .title-container {
                text-align: center;
                animation: fadeIn 2s;
            }
            .title {
                font-size: 2em;
                color: #333;
            }
            .title-details {
                font-size: 1.5em;
                color: #ff6f61;
            }
            @keyframes fadeIn {
                0% {opacity: 0;}
                100% {opacity: 1;}
            }
            ul {
                list-style-type: none;
                padding: 0;
                margin: 0 0 20px 0;
            }
            li {
                margin-bottom: 10px;
                padding: 15px;
                background-color: #f9f9f9;
                border-radius: 5px;
                box-shadow: 0 2px 5px rgba(0, 0, 0, 0.1);
                transition: background-color 0.3s;
                border: 1px solid #ddd;
            }
            li:hover {
                background-color: #e9e9e9;
            }
            .date {
                font-weight: bold;
                color: #333;
                margin-bottom: 10px;
            }
            .time {
                padding: 5px;
                border-radius: 3px;
                margin-bottom: 5px;
            }
            .entrada {
                color: #008000;  // Verde
            background-color: #f0f0f0;
            }
            .saida {
                color: #800000;  // Vermelho
            background-color: #f0f0f0;
            }
            .form-container label, .form-container input, .form-container button {
                width: 100%;
                max-width: 300px;
                margin: 5px 0;
                font-weight: bold;
                box-sizing: border-box; /* Adicionado para incluir padding e border no cálculo de largura */
                    }
body
    .container
        .form-container
            form(action="/pontos/matricula", method="GET", style="display: flex; flex-direction: column; align-items: center;")
                label(for="matricula", style="display: block; text-align: center; font-size: 1.2em; color: #333; margin-bottom: 10px;") Matrícula:
                input(type="number", name="matricula", id="matricula", style="padding: 10px; border: 1px solid #ddd; border-radius: 5px; margin-bottom: 10px;")
                button(type="submit", style="background-color: #ff6347; color: white; border: none; padding: 10px 20px; margin-top: 10px; border-radius: 5px; cursor: pointer;") Filtrar
        div.title-container
            h1.title Total de horas trabalhadas de
            span.title-details
                i.fas.fa-user(style="margin-right: 5px;")
                | #{nome} | Matrícula #{matricula}
        h2(style="text-align: center; font-size: 1.2em;") Total de horas trabalhadas:
            span.title-details(style="font-size: 1em;") #{String(Math.floor(totalHorasTrabalhadas)).padStart(2, '0')}:#{String(Math.round((totalHorasTrabalhadas % 1) * 60)).padStart(2, '0')}
        ul
            each ponto in pontos
                li
                    span.date #{new Date(ponto.data).toLocaleDateString('pt-BR')}:
                    ul
                        li.time.entrada Entrada 1: #{new Date(ponto.entrada1).toLocaleTimeString('pt-BR')}
                        li.time.saida Saída 1: #{new Date(ponto.saida1).toLocaleTimeString('pt-BR')}
                        li.time.entrada Entrada 2: #{new Date(ponto.entrada2).toLocaleTimeString('pt-BR')}
                        li.time.saida Saída 1: #{new Date(ponto.saida2).toLocaleTimeString('pt-BR')}
